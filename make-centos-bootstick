#!/bin/sh

# Insert a usb stick (at least 1G) into a CentOS 7 machine.
# yum -y install syslinux dosfstools
# Run this script as root, passing the /dev/sdX you are going to use
# eg:
#   sudo ./make-centos-bootstick /dev/sdb
# This probably works for and on any RedHat based distro,
# but has only been tested with CentOS 7.

# LICENSE
# MIT License

# TODO
# Don't use such a dumb "tmp_dir"
# More complete cleanup
# Allow customizing arch, install type, mirror

# Edit these as needed
arch=x86_64
mirror=http://mirrors.cmich.edu/centos/7/isos
install_type=NetInstall
readme=0_README.txt
sumfile=sha256sum.txt

tmp_dir="./bootstick"
# Since the mbr.bin is kept in different places in different versions.
mbr=$(rpm -ql syslinux | grep '/mbr.bin$')
ks=ks.cfg
usage="USAGE: $0 [-r REMOTE_KS ] [-k LOCAL_KS] [-c CUSTOM_SYSLINUX] [-i ISO] \
[-u ISO_URL] [-s SPLASH_IMAGE ] [--no-clean] DEVICE"

warn() {
    echo "$@" >&2
}

die() {
    status=$1
    shift
    warn "$@"
    exit $status
}

get_current_iso_name() {
    iso="$(curl "$mirror/$arch/$readme" | grep "CentOS-7-$arch-$install_type")"
}

fetch_iso() {
    curl -O $mirror/$arch/$iso
    curl -O $mirror/$arch/$sumfile
    grep "$iso" $sumfile | sha256sum -c - || die 8 "$iso download incorrect"
}

require_unmounted() {
    mount | grep -F "$dev" && die 1 "Not going to fsck mounted device $dev"
}

partition() {
    # This is dirty, but...
    # d delete four partitions
    # n new partition, accepting defaults for type, number, first sector
    # +250M set size
    # t change type to:
    # c W95 FAT32 (LBA)
    # a make bootable
    # n new partition, accepting defaults for type, number, first sector, size
    # w write changes to disk
    echo 'd

d

d

d

n



+250M
t
c
a
n




w
' | fdisk $dev
}

format_partitions() {
    mkfs -t vfat -n "BOOT" ${dev}1
    mkfs -L "DATA" ${dev}2
}

write_mbr() {
     dd conv=notrunc bs=440 count=1 if=$mbr of=$dev
}

install_syslinux() {
    syslinux ${dev}1
}

mount_parts() {
    mkdir -p BOOT && mount ${dev}1 BOOT
    mkdir -p DATA && mount ${dev}2 DATA
    mkdir -p DVD  && mount -t iso9660 -o loop $PWD/$iso    $PWD/DVD
}

make_boot() {
    cp -v DVD/isolinux/* BOOT/
    mv -v BOOT/isolinux.cfg BOOT/syslinux.cfg

    if [ -n "$syslinux" ]; then
        mv -v $syslinux BOOT/syslinux.cfg \
        || die 1 "couldn't move $syslinux to Boot/"
    else
        edit_syslinux
    fi

    if [ -n "$splash" ]; then
        mv -v $splash BOOT/ || die 1 "couldn't move $splash to Boot/"
    fi
}

make_data() {
    cp -v $iso DATA/ || die 1 "couldn't copy $iso to DATA/"
}

clean_up() {
    umount ${dev}1
    umount ${dev}2
    umount $iso
}

edit_syslinux() {
    if [ -n "$ksremote" ]; then
        sed -i \
        '/label linux/,/^$/s#LABEL=.* quiet#LABEL=DATA:/ '"$ks"'#'
        BOOT/syslinux.cfg
    elif [ -n "$ks" ]; then
        sed -i \
        '/label linux/,/^$/s#LABEL=.* quiet#LABEL=DATA:/ ks=hd:LABEL=BOOT:/ks.cfg#' \
        BOOT/syslinux.cfg
        mv -v $ks BOOT/ || die 16 "Couldn't move $ks to BOOT/"
    else
        sed -i \
        '/label linux/,/^$/s#LABEL=.* quiet#LABEL=DATA:/#' \
        BOOT/syslinux.cfg
    fi

    if [ -n "$splash" ]; then
        sed -i \
        's/\(menu background \).*/\1'"$splash"'/I'
        BOOT/syslinux.cfg
    fi
}

mkdir -p $tmp_dir || die 2 "Can't make $tmp_dir"

while [ $# -gt 0 ]; do
    case $1 in
      -h)
        die 0 $usage
        ;;
      -c)
        syslinux=$2
        cp $syslinux $tmp_dir/
        syslinux=$(basename $syslinux)
        shift 2
        ;;
      -k)
        ks=$2
        cp $ks $tmp_dir/
        ks=$(basename $ks)
        shift 2
        ;;
      -r)
        ks=$2
        ksremote=true
        shift 2
        ;;
      -s)
        splash=$2
        cp $splash $tmp_dir/
        splash=$(basename $splash)
        shift 2
        ;;
      --no-clean)
        noclean=true
        shift
        ;;
      --)
        shift
        break
        ;;
      -*)
        die 4 Unknown flag $1 $usage
        break
        ;;
      *)
        break
        ;;
    esac
done

test $# -eq 1 || die 1 "$usage"
dev=$1

cd $tmp_dir || die 2 "Can't cd to $tmp_dir"
get_current_iso_name
test -f $iso || fetch_iso

require_unmounted
partition
format_partitions
write_mbr
install_syslinux
mount_parts
make_boot
make_data
test "$noclean" || clean_up
